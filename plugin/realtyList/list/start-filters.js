import plugin/realtyList/realty_main.jsfunction get_flt_id(x) {	return "#"+x.id.replace( /\w+$/, '');}function get_flt_val(id) {	return $(id+"dp").val().split("-")}function set_flt_val(id, val) {	$(id+"dp").val(val.join("-"))}/** * customs * */var datePickerSelectors = (function () {	var names = {			month: [				'Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'			],			day_short: [				'Вс','Пн','Вт','Ср','Чт','Пт','Сб'			]		},		months_len = names.month.length + 1,		option_tpl = '<option value="{$idx}">{$text}</option>',		month = {			$nodes: $("#flt-from-month, #flt-to-month"),			inner: option_tpl				.replace( '{idx}', -1)				.replace( '{$text}', _("Месяц") )		},		stamp = {			time: new Date()		};	$.extend( stamp, {		mon: stamp.time.getMonth(),		yea: stamp.time.getFullYear()	});	for (var i = 0; i < months_len; i += 1 ) {		var mon_shifted = i + stamp.mon,			mon_modulo = mon_shifted % 12,			year = mon_modulo < stamp.mon ? stamp.yea + 1 : stamp.yea;		month.inner += option_tpl			.replace( '{$idx}', mon_shifted )			.replace( '{$text}', _( names.month[ mon_modulo ] ) +" "+ year );	}	month.$nodes.append( month.inner );	return {		dayMins: names.day_short,		m: stamp.mon,		y: stamp.yea,		month: month.$nodes	}}());(function () {	var days = $( "#flt-from-day, #flt-to-day" ),		tpl = '<option value="{$idx}">{$text}</option>',		inner = tpl.replace( '{$idx}', 0 )			.replace( '{idx}', 0 )			.replace( '{$text}', _( "День" ) );	for (var i = 1; i <= 31; i++) {		inner += tpl			.replace( '{$idx}', i )			.replace( '{$text}', i );	}	days.append( inner );	// при переключении языка переводим выпадающие списки	app.event.add( "lang.change", "flt-date.lang", function () {		var callback = function (a) {			return _( a );		};		$( 'option', $.merge( days, datePickerSelectors.month ) ).each( function () {			var $ctx = $( this ),				i18n_value = $ctx.attr( "i" ),				text_plain = $ctx.text();			if ( !i18n_value && app.lang.from == 'ru' ) {				$ctx.attr( "i", text_plain );			}			$ctx.text( text_plain.replace( /\S+/, callback ) );		} );	});	days.on( 'change', function () {		var id = get_flt_id( this ),			val = get_flt_val( id );		val[2] = app.exports.realty.fltChanger.twoDigits( this.value );		set_flt_val( id, val );		app.exports.realty.fltChanger.on_list();	});}());datePickerSelectors.month.on( 'change', function () {	var id = get_flt_id( this ),		val = get_flt_val( id ),		day = $( id +"day" ),		month = $( id +"month" ),		mon = month.val()	val[1] = app.exports.realty.fltChanger.twoDigits( mon % 12 + 1 );	val[0] = new Date().getFullYear() + ( mon >= 12 ? 1 : 0 );	set_flt_val( id, val );	app.exports.realty.fltChanger.dayRender( day, val );	app.exports.realty.fltChanger.on_list();});// Фильтр "Даты"(function () {	var $datepicker_inputs = $( "#flt-from-dp, #flt-to-dp" );	$datepicker_inputs		.val( new Date().getFullYear() + "-00-00" )		.datepicker( {			showOn:"button",			buttonImage:app.conf.theme + "img/calendar.gif",			buttonImageOnly:true,			changeMonth:true,			changeYear:true,			minDate:0,			maxDate:"+1y",			dateFormat:"yy-mm-dd"		} );	//  todo refactor with days/month	$datepicker_inputs.on( 'change', function () {		var id = get_flt_id( this ),			val = get_flt_val( id ),			day = $( id + "day" ),			month = $( id + "month" );		app.exports.realty.fltChanger.dayRender( day, val );		day.val( val[2] - 0 );		month.val( val[1] - 1 + ( val[0] == datePickerSelectors.y ? 0 : 12) );		app.exports.realty.fltChanger.on_list();	} );	//  index on document order	$( $datepicker_inputs[0] ).on( 'change', function () {		$( this ).off( 'change', arguments.callee );		setTimeout( function () {			$( $datepicker_inputs[1] ).next()				.trigger( 'click' );		}, 10 );	} );}());// устанавливаем положение/*function getRealtyCity() {	app.plugin.realtyList.create_city( $location.node, "/api/realtyList/place", true );	city = cookies().city;	if ( city ) {		console.log( "city" );	} else {		$.getScript( "http://j.maxmind.com/app/geoip.js", function () {			var geo = geoip_city() || geoip_region_name() || geoip_country_name();			$location.node.val( geo ).keydown();		});	}}*/// ****************************************************************** автокомплитер городов ******************************************************************if(!app.exports.place) app.exports.place = {}var $location = {		node: $( "#location-site" ),		cache: {}	},	place = app.exports.place;$location.node.autocomplete({	source: function( request, response ) {		console.log("source="+request.term)		var self = this		var f = function(data) {			response(data)			var ul = self.menu.element			ul.find("a").each(function(idx) {				var item = data[idx]				if(item) $(this).html("<b>"+item.country+"</b> <i>"+(item.region || "")+"</i> "+(item.city || "")+" <em>"+item.count+"</em> <font color=red>"+item.id+"</font>")			})		}		var term = request.term		var x = $location.cache[term]		if (x) {			f(x)			return		}		$.get( '/api/realtyList/place', { term: term }, function(data) {			data = app.util.rowsToArray(data)			$.each(data, function(idx, row) {				row.label = row.value = row.city || row.vicinity || row.region || row.country			})			$location.cache[term] = data			f(data)		})	},	select: function( event, ui ) {		console.log("select="+app.exports.repr(ui.item))		app.exports.place = ui.item		$("#flt-from-dp").next().click()	},	search: function(event, ui) {		console.log("search="+app.exports.repr(ui))	},	focus: function(event, ui) {		console.log("focus="+app.exports.repr(ui.item))	},	change: function(event, ui) {		console.log("change="+app.exports.repr(ui))	}}).val( place.city || place.vicinity || place.region || place.country );// фильтры$( "#flt-from-dp" ).on( 'change', function () {	$(this).unbind( 'change', arguments.callee );	setTimeout( function () {		$( "#flt-to-dp" ).next()			.trigger( 'click' );	}, 10);});