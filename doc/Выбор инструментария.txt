

Внимание! От фреймворка для серверной части отказываемся, так как он не согласуется с выбранной архитектурой: отображение на стороне клиента.

Выбор фреймворка php

Что ожидаем?
1. Простоту - начинающие программисты должны легко разобраться
2. Документацию - наглядную
3. Производительность - высокую
4. Должна иметь основные функции: авторизацию
5. Легко ли интегрироваться с ORM (опять же - пользовательскую авторизацию)
6. Кэш для ORM
7. Поддержка тестов

Фреймворки:
1. http://codeigniter.com/
2. http://kohanaframework.org/

Ссылки
1. Сравнение php-фреймворков в виде таблицы / http://rmcreative.ru/playground/php-frameworks/


Выбор ORM для PHP

=== Что ожидаем? ===
# Поддержка синхронизации модели с базой
# Поддержка кешей. В частности redis
# Надёжный
# Досаточно простой в программировании

=== Кандидаты ===
# RedBean / http://www.redbeanphp.com
# Doctrine
# Propel
# Outlet / http://www.outlet-orm.org

=== Выбор ===
Указанным критериям отвечает RedBean. Propel не подходит из-за сложности. Doctrine - из-за излишней интеграции с Symphony. Outlet не обладает всеми возможностями RedBean. Остальные ORM либо слишком молодые, либо идут вместе с фреймворками, например, ORM из Yii.

=== Ссылки ===
# RedBean (en, official) / http://groups.google.com
# RedBean документация / http://www.redbeanphp.com/manual
# RedBean группы обсуждений / http://groups.google.com/group/redbeanorm?pli=1
# RedBean (рус) / http://habrahabr.ru/post/132004

Выбор javascript-фреймворка

Что ожидаем?
1. Поддержка, как минимум, всех основных браузеров. Желательно и мобильных
2. Простой в программировании (и хорошо документирован)
3. Производительный
4. Большая библиотека виджетов

Всем этим требованиям удовлетворяет jquery. http://jqueryui.com - виджеты, http://jquerymobile.com - он же под мобильные браузеры. Под jquery неписано огромное количество плагинов сторонних разработчиков

Фреймворки для браузеров ПК
1. http://jquery.com
2. http://mootools.net - неплохой, но развит хуже jquery
3. Ext JS - не ясно как прикручивать дизайн
4. Dojo - виджеты не работают во многих браузерах, хоть и заявлено иное
5. Yahoo! UI Library (YUI) - не достаточно прост в программировании

Фреймворки для мобильных устройств (поддерживают жесты на сенсорном экране)
1. http://jquerymobile.com - похож на jquery, имеет много виджетов
2. http://joapp.com
3. http://www.appcelerator.com/products/titanium-mobile-application-development - непонятная документация
4. http://dhtmlx.com/touch - так же продвинутый с поддержкой виджетов
5. http://the-m-project.net
6. http://xuijs.com

Выбор сервера
Что ожидаем?
1. Проект должен полностью находиться в памяти
2. Обработчики запросов должны создаваться при старте проекта, а не для каждого запроса
3. Протокол проксирования должен быть максимально быстрым
4. Во время разработки сервер должен перезагружаться, если были изменены файлы проекта 

В качестве высоконагруженного сервера и для выдачи статики используем nginx. nginx в 3 раза быстрее apache отдаёт статику. nginx так же будет контролировать проект на php проксируя запросы к нему.
1. php-cgi - протокол fastcgi. С php-скриптами обращается как cgi
2. php-fpm - протокол fastcgi. Держит скрипты в памяти, но разрушает объекты и создаёт заново при запросе
3. nanoweb - http-сервер написанный на php. Работает недостаточно быстро
4. Написать свой простой http-сервер для проекта

Выбираем nginx+http-сервер проекта (пункт 4)

Если бы мы решили использовать другие решения, то нам бы пригодился rewrite:
Для перенаправления на главный файл проекта php используем rewrite в конфигурации nginx: http://nginx.org/ru/docs/http/ngx_http_rewrite_module.html

Ссылки:
1. http://rusadmin.biz/ustanovka-i-nastrojka-php-fpm.html
2. http://job-blog.bullgare.ru/tag/nginx/
3. http://wiki.opennet.ru/Nginx
4. http://rusadmin.biz/tags/php-fpm

Выбор сервера базы данных
Наш ORM поддерживает несколько баз данных. Так что мы можем их менять как перчатки. Postgres зарекомендовал себя в высокопроизводительных проектах - выбираем его.